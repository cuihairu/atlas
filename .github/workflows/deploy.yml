name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: pages
  cancel-in-progress: true

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Configure GitHub Pages
        uses: actions/configure-pages@v4

      - name: Prepare Quartz build directory
        run: |
          set -eux
          QUARTZ_REF=v4.3.0
          mkdir -p build
          git clone https://github.com/jackyzha0/quartz.git build
          cd build
          git checkout "$QUARTZ_REF" || true
          npm i
          # copy site content & config from repo
          echo "-- Listing repo content root --"
          ls -la "$GITHUB_WORKSPACE/content" || true
          # ensure we don't end up with content/content nesting
          rm -rf ./content ./static || true
          mkdir -p content static
          cp -a "$GITHUB_WORKSPACE/content/." ./content/
          echo "-- Listing build/content after copy --"
          ls -la ./content || true
          # ensure home exists (Quartz warns if missing). Create minimal one if absent.
          if [ ! -f ./content/index.md ]; then
            { echo '---'; echo 'title: Home'; echo '---'; echo; echo 'Welcome'; } > ./content/index.md
            echo "Created fallback content/index.md"
          fi
          if [ -d "$GITHUB_WORKSPACE/static" ]; then cp -r "$GITHUB_WORKSPACE/static" ./static; else mkdir -p static; fi
          cp "$GITHUB_WORKSPACE/quartz.config.ts" ./
          cp "$GITHUB_WORKSPACE/quartz.layout.ts" ./
          npx quartz build
          # Avoid content negotiation serving index.xml over index.html on Pages
          if [ -f public/index.xml ]; then mv public/index.xml public/rss.xml; fi

      - name: Verify site output
        run: |
          set -eux
          test -f build/public/index.html
          ls -la build/public | sed -n '1,200p'

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: build/public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
